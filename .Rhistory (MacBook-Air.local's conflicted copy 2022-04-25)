y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_llpv),
col = c(col_vec, NA),
xlab = "Price of pediatric vaccine product per dose (USD)",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/costllAb_costpVax", type = "pdf")
cost_prod + cost_nd
cost_prod
cost_nd
# pVax_cost <- seq(0, 10, by = 0.25)
pVax_cost <- seq(0, 4, by = 0.05)
winner_lp <- function (llcost, pvcost, WTP, NHB1, NHB2) {
llAb_tcost <- sum(llAb_admin * coverage[1]* num_infants * (llcost + cost_nd)) +  medcost_llAb_u
pVax_tcost <- sum(pVax_admin *coverage[3]* num_infants * (pvcost + cost_nd)) + medcost_pVax_u
pVax_o_tcost <- sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_pVax_u_older
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_llAb_pVax_u
llAb_pVax_o_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_llAb_pVax_u_older
mVax_pVax_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_mVax_pVax_u
mVax_pVax_o_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_mVax_pVax_u_older
NHB_llAb <- (DALYS_lost_no_u - DALYS_lost_llAb_u) - (llAb_tcost - medcost_no_u) / WTP
NHB_pVax <- (DALYS_lost_no_u - DALYS_lost_pVax_u) - (pVax_tcost - medcost_no_u) / WTP
NHB_pVax_o <- (DALYS_lost_no_u - DALYS_lost_pVax_older_u) - (pVax_o_tcost - medcost_no_u) / WTP
NHB_llAb_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_u) - (llAb_pVax_tcost - medcost_no_u) / WTP
NHB_llAb_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_older_u) - (llAb_pVax_o_tcost - medcost_no_u) / WTP
NHB_mVax_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_u) - (mVax_pVax_tcost - medcost_no_u) / WTP
NHB_mVax_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_older_u) - (mVax_pVax_o_tcost - medcost_no_u) / WTP
NHB_all <- matrix(c(NHB1, NHB_llAb, NHB2, NHB_pVax, NHB_llAb_pVax, NHB_mVax_pVax, NHB_pVax_o, NHB_llAb_pVax_o, NHB_mVax_pVax_o), nrow = trials, ncol = 9)
winners <- apply(NHB_all, MARGIN = 1, FUN = which.max)
wintakeall <- getmode(winners)
wintakeall
}
SA_llpv <- matrix(NA, nrow = length(llAb_cost), ncol = length(pVax_cost))
for (lp in 1:length(llAb_cost)) {
for(pv in 1:length(pVax_cost)){
llc <- llAb_cost[lp]
pvc <- pVax_cost[pv]
SA_llpv [lp,pv] <- winner_lp(llc, pvc, CET_Mali_GDP, NHB_no_GDP, NHB_m_GDP)
}
}
quartz("cost of llAb vs cost pVax", 8, 8)
par(mfrow =c(1,1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(pVax_cost[1] - 0.025, pVax_cost + 0.025),
y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_llpv),
col = c(col_vec, NA),
xlab = "Price of pediatric vaccine product per dose (USD)",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/costllAb_costpVax", type = "pdf")
SA_llpv
col_vec
source("~/Dropbox/Rachel Only/RSV-CEA-combos-Mali/master.R", echo=TRUE)
llAb_cost <- seq(0, 3, by = 0.05)
pVax_cost <- seq(0, 4, by = 0.05)
winner_lp <- function (llcost, pvcost, WTP, NHB1, NHB2) {
llAb_tcost <- sum(llAb_admin * coverage[1]* num_infants * (llcost + cost_nd)) +  medcost_llAb_u
pVax_tcost <- sum(pVax_admin *coverage[3]* num_infants * (pvcost + cost_nd)) + medcost_pVax_u
pVax_o_tcost <- sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_pVax_u_older
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_llAb_pVax_u
llAb_pVax_o_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_llAb_pVax_u_older
mVax_pVax_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_mVax_pVax_u
mVax_pVax_o_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_mVax_pVax_u_older
NHB_llAb <- (DALYS_lost_no_u - DALYS_lost_llAb_u) - (llAb_tcost - medcost_no_u) / WTP
NHB_pVax <- (DALYS_lost_no_u - DALYS_lost_pVax_u) - (pVax_tcost - medcost_no_u) / WTP
NHB_pVax_o <- (DALYS_lost_no_u - DALYS_lost_pVax_older_u) - (pVax_o_tcost - medcost_no_u) / WTP
NHB_llAb_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_u) - (llAb_pVax_tcost - medcost_no_u) / WTP
NHB_llAb_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_older_u) - (llAb_pVax_o_tcost - medcost_no_u) / WTP
NHB_mVax_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_u) - (mVax_pVax_tcost - medcost_no_u) / WTP
NHB_mVax_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_older_u) - (mVax_pVax_o_tcost - medcost_no_u) / WTP
NHB_all <- matrix(c(NHB1, NHB_llAb, NHB2, NHB_pVax, NHB_llAb_pVax, NHB_mVax_pVax, NHB_pVax_o, NHB_llAb_pVax_o, NHB_mVax_pVax_o), nrow = trials, ncol = 9)
winners <- apply(NHB_all, MARGIN = 1, FUN = which.max)
wintakeall <- getmode(winners)
wintakeall
}
SA_llpv <- matrix(NA, nrow = length(llAb_cost), ncol = length(pVax_cost))
for (lp in 1:length(llAb_cost)) {
for(pv in 1:length(pVax_cost)){
llc <- llAb_cost[lp]
pvc <- pVax_cost[pv]
SA_llpv [lp,pv] <- winner_lp(llc, pvc, CET_Mali_GDP, NHB_no_GDP, NHB_m_GDP)
}
}
# UMB color palette
UMBred <- rgb(200, 16, 46, maxColorValue = 255)
UMByellow <- rgb(255, 205, 0, maxColorValue = 255)
UMBblue <- rgb(0, 118, 152, maxColorValue = 255)
UMBslate <- rgb(93, 135, 161, maxColorValue = 255)
UMBgray <- rgb(149, 160, 169, maxColorValue = 255)
UMBcharcoal <- rgb(105, 106, 109, maxColorValue = 255)
UMBplum <- rgb(73, 24, 45, maxColorValue = 255)
UMBforest <- rgb(51, 70, 13, maxColorValue = 255)
UMBsea <- rgb(180, 204, 149, maxColorValue = 255)
UMBtan <- rgb(200, 177, 139, maxColorValue = 255)
# make standard vector for colors
UMB1 <- c(UMBred, UMBblue, UMBforest, UMBplum, UMByellow, UMBcharcoal,
UMBsea, UMBtan, UMBslate)
# Cross color palette
Cross_vec <- met.brewer("Cross", n = 9, "discrete")
col_vec <- c(Cross_vec[2], Cross_vec[8], Cross_vec[6], Cross_vec[1],
Cross_vec[5], Cross_vec[9], Cross_vec[7], Cross_vec[4],
Cross_vec[3])
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(eff_red[1]-0.005, eff_red + 0.005)*100,
y = c(llAb_cost[1]- 0.125, llAb_cost + 0.125),
z = t(SA_ller),
col =c(col_vec, NA),
xlab="Efficacy of pediatric vaccine administered at 10 & 14 weeks (%)",
ylab="Price of long-acting antibody product (USD)")
quartz("price of llAb vs price pVax", 8, 8)
par(mfrow =c(1,1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(pVax_cost[1] - 0.025, pVax_cost + 0.025),
y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_llpv),
col = c(col_vec, NA),
xlab = "Price of pediatric vaccine product per dose (USD)",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/costllAb_costpVax", type = "pdf")
quartz("price of llAb vs efficacy llAb", 8, 8)
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(eff_red[1]-0.005, eff_red + 0.005) * 100,
y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_ll_ce),
col = c(col_vec, NA),
xlab = "Efficacy of long-acting antibody",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/pricellAb_effllAb", type = "pdf")
DALYS_lost_p_pe <- matrix(NA, trials, length(eff_red))
medcost_p_pe <- matrix(NA, trials, length(eff_red))
for (p in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_p <- LRTI_func(eff_red[er], coverage[3], mat_eff_pVax, p_pneum_u[p], cases_no_u_bic[,,p]) # number of LRTI episodes
temp_adj_LRTI_p <- adj_func(temp_LRTI_p)
temp_inpat_p <- inpat_func(p_hosp_u[p,], temp_adj_LRTI_p) # number of inpatient episodes
temp_outpat_p <- outpat_func(temp_adj_LRTI_p, temp_inpat_p) # number of outpatient episodes
temp_nrcare_p <- nr_care_func(temp_inpat_p) # number not receiving care
temp_death_p <- mort_inpat_func(CFR_by_age_u[p,], temp_inpat_p, CFR_nr_care_u[p,], temp_nrcare_p) # number of deaths
temp_YLL_p <- YLL_func(temp_death_p) # YLL
temp_YLD_p <- YLD_func(temp_inpat_p, temp_death_p, di_yrs_u[p], dw_LRTI_severe_u[p], temp_adj_LRTI_p, dw_LRTI_mod_u[p]) # YLD
DALYS_lost_p_pe[p, er] <- sum(temp_YLD_p + temp_YLL_p) # DALYs lost
medcost_p_pe[p, er] <- sum(medcost_func(cost_hosp_u[p], temp_inpat_p, cost_outpatient_u[p], temp_outpat_p)) # medcosts
}}
source("~/Dropbox/Rachel Only/RSV-CEA-combos-Mali/master.R", echo=TRUE)
llAb_cost <- seq(0, 3, by = 0.05)
Vax_cost <- seq(0, 10, by = 0.25)
pVax_cost <- seq(0, 4, by = 0.05)
winner_lp <- function (llcost, pvcost, WTP, NHB1, NHB2) {
llAb_tcost <- sum(llAb_admin * coverage[1]* num_infants * (llcost + cost_nd)) +  medcost_llAb_u
pVax_tcost <- sum(pVax_admin *coverage[3]* num_infants * (pvcost + cost_nd)) + medcost_pVax_u
pVax_o_tcost <- sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_pVax_u_older
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_llAb_pVax_u
llAb_pVax_o_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_llAb_pVax_u_older
mVax_pVax_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (pvcost + cost_nd)) + medcost_joint_mVax_pVax_u
mVax_pVax_o_tcost <- sum(mVax_admin * coverage[2]* num_infants * (cost_prod + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + pvcost)) + medcost_joint_mVax_pVax_u_older
NHB_llAb <- (DALYS_lost_no_u - DALYS_lost_llAb_u) - (llAb_tcost - medcost_no_u) / WTP
NHB_pVax <- (DALYS_lost_no_u - DALYS_lost_pVax_u) - (pVax_tcost - medcost_no_u) / WTP
NHB_pVax_o <- (DALYS_lost_no_u - DALYS_lost_pVax_older_u) - (pVax_o_tcost - medcost_no_u) / WTP
NHB_llAb_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_u) - (llAb_pVax_tcost - medcost_no_u) / WTP
NHB_llAb_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_llAb_pVax_older_u) - (llAb_pVax_o_tcost - medcost_no_u) / WTP
NHB_mVax_pVax <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_u) - (mVax_pVax_tcost - medcost_no_u) / WTP
NHB_mVax_pVax_o <- (DALYS_lost_no_u - DALYS_lost_joint_mVax_pVax_older_u) - (mVax_pVax_o_tcost - medcost_no_u) / WTP
NHB_all <- matrix(c(NHB1, NHB_llAb, NHB2, NHB_pVax, NHB_llAb_pVax, NHB_mVax_pVax, NHB_pVax_o, NHB_llAb_pVax_o, NHB_mVax_pVax_o), nrow = trials, ncol = 9)
winners <- apply(NHB_all, MARGIN = 1, FUN = which.max)
wintakeall <- getmode(winners)
wintakeall
}
SA_llpv <- matrix(NA, nrow = length(llAb_cost), ncol = length(pVax_cost))
for (lp in 1:length(llAb_cost)) {
for(pv in 1:length(pVax_cost)){
llc <- llAb_cost[lp]
pvc <- pVax_cost[pv]
SA_llpv [lp,pv] <- winner_lp(llc, pvc, CET_Mali_GDP, NHB_no_GDP, NHB_m_GDP)
}
}
DALYS_lost_l_ce <- matrix(NA, trials, length(eff_red))
medcost_l_ce <- matrix(NA, trials, length(eff_red))
for (l in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_l <- LRTI_func(eff_red[er], coverage[1], mat_eff_llAb, p_pneum_u[l], cases_no_u_bic[,,l]) # number of LRTI episodes
temp_adj_LRTI_l <- adj_func(temp_LRTI_l)
temp_inpat_l <- inpat_func(p_hosp_u[l,], temp_adj_LRTI_l) # number of inpatient episodes
temp_outpat_l <- outpat_func(temp_adj_LRTI_l, temp_inpat_l) # number of outpatient episodes
temp_nrcare_l <- nr_care_func(temp_inpat_l) # number not receiving care
temp_death_l <- mort_inpat_func(CFR_by_age_u[l,], temp_inpat_l, CFR_nr_care_u[l,], temp_nrcare_l) # number of deaths
temp_YLL_l <- YLL_func(temp_death_l) # YLL
temp_YLD_l <- YLD_func(temp_inpat_l, temp_death_l, di_yrs_u[l], dw_LRTI_severe_u[l], temp_adj_LRTI_l, dw_LRTI_mod_u[l]) # YLD
DALYS_lost_l_ce[l, er] <- sum(temp_YLD_l + temp_YLL_l) # DALYs lost
medcost_l_ce[l, er] <- sum(medcost_func(cost_hosp_u[l], temp_inpat_l, cost_outpatient_u[l], temp_outpat_l)) # medcosts
}}
DALYS_lost_lp_ce <- matrix(NA, trials, length(eff_red))
medcost_lp_ce <- matrix(NA, trials, length(eff_red))
for (lp in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_lp <- LRTI_func_joint(eff_red[er], efficacy[3], coverage[1], coverage[3], mat_eff_llAb, mat_eff_pVax, p_pneum_u[lp], cases_no_u_bic[,,lp]) # number of LRTI episodes
temp_adj_LRTI_lp <- adj_func(temp_LRTI_lp)
temp_inpat_lp <- inpat_func(p_hosp_u[lp,], temp_adj_LRTI_lp) # number of inpatient episodes
temp_outpat_lp <- outpat_func(temp_adj_LRTI_lp, temp_inpat_lp) # number of outpatient episodes
temp_nrcare_lp <- nr_care_func(temp_inpat_lp) # number not receiving care
temp_death_lp <- mort_inpat_func(CFR_by_age_u[lp,], temp_inpat_lp, CFR_nr_care_u[lp,], temp_nrcare_lp) # number of deaths
temp_YLL_lp <- YLL_func(temp_death_lp) # YLL
temp_YLD_lp <- YLD_func(temp_inpat_lp, temp_death_lp, di_yrs_u[lp], dw_LRTI_severe_u[lp], temp_adj_LRTI_lp, dw_LRTI_mod_u[lp]) # YLD
DALYS_lost_lp_ce[lp, er] <- sum(temp_YLD_lp + temp_YLL_lp) # DALYs lost
medcost_lp_ce[lp, er] <- sum(medcost_func(cost_hosp_u[lp], temp_inpat_lp, cost_outpatient_u[lp], temp_outpat_lp)) # medcosts
}}
DALYS_lost_lp_o_ce <- matrix(NA, trials, length(eff_red))
medcost_lp_o_ce <- matrix(NA, trials, length(eff_red))
for (lpo in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_lpo <- LRTI_func_joint(eff_red[er], efficacy[3], coverage[1], cov_pVax_o, mat_eff_llAb, mat_eff_older_pVax, p_pneum_u[lpo], cases_no_u_bic[,,lpo]) # number of LRTI episodes
temp_adj_LRTI_lpo <- adj_func(temp_LRTI_lpo)
temp_inpat_lpo <- inpat_func(p_hosp_u[lpo,], temp_adj_LRTI_lpo) # number of inpatient episodes
temp_outpat_lpo <- outpat_func(temp_adj_LRTI_lpo, temp_inpat_lpo) # number of outpatient episodes
temp_nrcare_lpo <- nr_care_func(temp_inpat_lpo) # number not receiving care
temp_death_lpo <- mort_inpat_func(CFR_by_age_u[lpo,], temp_inpat_lpo, CFR_nr_care_u[lpo,], temp_nrcare_lpo) # number of deaths
temp_YLL_lpo <- YLL_func(temp_death_lpo) # YLL
temp_YLD_lpo <- YLD_func(temp_inpat_lpo, temp_death_lpo, di_yrs_u[lpo], dw_LRTI_severe_u[lpo], temp_adj_LRTI_lpo, dw_LRTI_mod_u[lpo]) # YLD
DALYS_lost_lp_o_ce[lpo, er] <- sum(temp_YLD_lpo + temp_YLL_lpo) # DALYs lost
medcost_lp_o_ce[lpo, er] <- sum(medcost_func(cost_hosp_u[lpo], temp_inpat_lpo, cost_outpatient_u[lpo], temp_outpat_lpo)) # medcosts
}}
winner_llAb_cost_ce <- function (llcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
llAb_tcost <- sum(llAb_admin * coverage[1]* num_infants * (llcost + cost_nd)) +  medcost_l_ce
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + cost_prod)) + medcost_lp_ce
llAb_pVax_o_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_older_admin * cov_pVax_o * num_infants * (cost_nd + cost_prod)) + medcost_lp_o_ce
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_llAb <- (DALYS_no_u_m - DALYS_lost_l_ce) - (llAb_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_ce) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax_o <- (DALYS_no_u_m - DALYS_lost_lp_o_ce) - (llAb_pVax_o_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB_llAb, NHB2_m, NHB3_m, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB_llAb_pVax_o, NHB6_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_ll_ce <- matrix(NA, nrow = length(llAb_cost), ncol = length(eff_red))
for (ll in 1:length(llAb_cost)){
llcc <- llAb_cost[ll]
SA_ll_ce [ll,] <- winner_llAb_cost_ce(llcc, CET_Mali_GDP, NHB_no_GDP, NHB_m_GDP, NHB_p_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_mp_older_GDP)
}
# UMB color palette
UMBred <- rgb(200, 16, 46, maxColorValue = 255)
UMByellow <- rgb(255, 205, 0, maxColorValue = 255)
UMBblue <- rgb(0, 118, 152, maxColorValue = 255)
UMBslate <- rgb(93, 135, 161, maxColorValue = 255)
UMBgray <- rgb(149, 160, 169, maxColorValue = 255)
UMBcharcoal <- rgb(105, 106, 109, maxColorValue = 255)
UMBplum <- rgb(73, 24, 45, maxColorValue = 255)
UMBforest <- rgb(51, 70, 13, maxColorValue = 255)
UMBsea <- rgb(180, 204, 149, maxColorValue = 255)
UMBtan <- rgb(200, 177, 139, maxColorValue = 255)
# make standard vector for colors
UMB1 <- c(UMBred, UMBblue, UMBforest, UMBplum, UMByellow, UMBcharcoal,
UMBsea, UMBtan, UMBslate)
# Cross color palette
Cross_vec <- met.brewer("Cross", n = 9, "discrete")
col_vec <- c(Cross_vec[2], Cross_vec[8], Cross_vec[6], Cross_vec[1],
Cross_vec[5], Cross_vec[9], Cross_vec[7], Cross_vec[4],
Cross_vec[3])
quartz("price of llAb vs price pVax", 8, 8)
par(mfrow =c(1,1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(pVax_cost[1] - 0.025, pVax_cost + 0.025),
y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_llpv),
col = c(col_vec, NA),
xlab = "Price of pediatric vaccine product per dose (USD)",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/costllAb_costpVax", type = "pdf")
quartz("price of llAb vs efficacy llAb", 8, 8)
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(eff_red[1]-0.005, eff_red + 0.005) * 100,
y = c(llAb_cost[1] - 0.025, llAb_cost + 0.025),
z = t(SA_ll_ce),
col = c(col_vec, NA),
xlab = "Efficacy of long-acting antibody",
ylab = "Price of long-acting antibody product (USD)")
quartz.save(file = "Figures/pricellAb_effllAb", type = "pdf")
# pVax, pre-seasonal, two doses admin at 6 & 7 months, protection delayed (2 wks)
pVax_older_admin <- empty_year_cohort
quartz("color legend", 8,5)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c("status quo","long-acting mAb",
"maternal vaccine", "pediatric vaccine 10 & 14 wks",
"long-acting mAb + pediatric vaccine 10 & 14 wks",
"maternal vaccine + pediatric vaccine 10 & 14 wks",
"pediatric vaccine 6 & 7 mos",
"long acting mAb + pediatric vaccine 6 & 7 mos",
"maternal vaccine + pediatric vaccine 6 & 7 mos"),
pch=15, pt.cex=3, cex = 1.5, bty='n',
col = col_vec)
# mtext("Intervention strategy", at=0.25, cex = 2)
quartz.save(file = "Figures/legend", type = "pdf")
NHB_lp_older_GDP
NHB_p_older_GDP
# and for SA # 6 at WTP 1 X GDP
NHB_lp_older_GDP <- NHB_func(prep_joint_llAb_pVax_older, CET_Mali_GDP)
winner_pe <- function (pvcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6, NHB7) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
NHB7_m <- rep.col(NHB7, length(eff_red))
pVax_tcost <- sum(pVax_admin * coverage[3]* num_infants * (pvcost + cost_nd)) +  medcost_p_pe
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + pvcost)) + medcost_lp_pe
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_pVax <- (DALYS_no_u_m - DALYS_lost_p_pe) - (llAb_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_pe) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB2_m, NHB3_m, NHB_pVax, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB6_m, NHB7_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe [pe,] <- winner_llAb_cost_ce(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
winner_pe <- function (pvcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6, NHB7) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
NHB7_m <- rep.col(NHB7, length(eff_red))
pVax_tcost <- sum(pVax_admin * coverage[3]* num_infants * (pvcost + cost_nd)) +  medcost_p_pe
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + pvcost)) + medcost_lp_pe
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_pVax <- (DALYS_no_u_m - DALYS_lost_p_pe) - (llAb_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_pe) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB2_m, NHB3_m, NHB_pVax, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB6_m, NHB7_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_llAb_cost_ce(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_pe(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
NHB_l_GDP <- NHB_func(prep_llAb, CET_Mali_GDP)
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_pe(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
DALYS_lost_p_pe <- matrix(NA, trials, length(eff_red))
medcost_p_pe <- matrix(NA, trials, length(eff_red))
for (p in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_p <- LRTI_func(eff_red[er], coverage[3], mat_eff_pVax, p_pneum_u[p], cases_no_u_bic[,,p]) # number of LRTI episodes
temp_adj_LRTI_p <- adj_func(temp_LRTI_p)
temp_inpat_p <- inpat_func(p_hosp_u[p,], temp_adj_LRTI_p) # number of inpatient episodes
temp_outpat_p <- outpat_func(temp_adj_LRTI_p, temp_inpat_p) # number of outpatient episodes
temp_nrcare_p <- nr_care_func(temp_inpat_p) # number not receiving care
temp_death_p <- mort_inpat_func(CFR_by_age_u[p,], temp_inpat_p, CFR_nr_care_u[p,], temp_nrcare_p) # number of deaths
temp_YLL_p<- YLL_func(temp_death_p) # YLL
temp_YLD_p <- YLD_func(temp_inpat_p, temp_death_p, di_yrs_u[p], dw_LRTI_severe_u[p], temp_adj_LRTI_p, dw_LRTI_mod_u[p]) # YLD
DALYS_lost_p_pe[p, er] <- sum(temp_YLD_p + temp_YLL_p) # DALYs lost
medcost_p_pe[p, er] <- sum(medcost_func(cost_hosp_u[p], temp_inpat_p, cost_outpatient_u[p], temp_outpat_p)) # medcosts
}}
DALYS_lost_lp_pe <- matrix(NA, trials, length(eff_red))
medcost_lp_pe <- matrix(NA, trials, length(eff_red))
for (lp in 1:trials) {
for(er in 1:length(eff_red)){
temp_LRTI_lp_pe <- LRTI_func_joint(efficacy[1], eff_red[er], coverage[1], coverage[3], mat_eff_llAb, mat_eff_pVax, p_pneum_u[lp], cases_no_u_bic[,,lp]) # number of LRTI episodes
temp_adj_LRTI_lp_pe <- adj_func(temp_LRTI_lp_pe)
temp_inpat_lp_pe <- inpat_func(p_hosp_u[lp,], temp_adj_LRTI_lp_pe) # number of inpatient episodes
temp_outpat_lp_pe <- outpat_func(temp_adj_LRTI_lp_pe, temp_inpat_lp_pe) # number of outpatient episodes
temp_nrcare_lp_pe <- nr_care_func(temp_inpat_lp_pe) # number not receiving care
temp_death_lp_pe <- mort_inpat_func(CFR_by_age_u[lp,], temp_inpat_lp_pe, CFR_nr_care_u[lp,], temp_nrcare_lp_pe) # number of deaths
temp_YLL_lp_pe <- YLL_func(temp_death_lp_pe) # YLL
temp_YLD_lp_pe <- YLD_func(temp_inpat_lp_pe, temp_death_lp_pe, di_yrs_u[lp], dw_LRTI_severe_u[lp], temp_adj_LRTI_lp_pe, dw_LRTI_mod_u[lp]) # YLD
DALYS_lost_lp_pe[lp, er] <- sum(temp_YLD_lp_pe + temp_YLL_lp_pe) # DALYs lost
medcost_lp_pe[lp, er] <- sum(medcost_func(cost_hosp_u[lp], temp_inpat_lp_pe, cost_outpatient_u[lp], temp_outpat_lp_pe)) # medcosts
}}
winner_pe <- function (pvcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6, NHB7) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
NHB7_m <- rep.col(NHB7, length(eff_red))
pVax_tcost <- sum(pVax_admin * coverage[3]* num_infants * (pvcost + cost_nd)) +  medcost_p_pe
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (llcost + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + pvcost)) + medcost_lp_pe
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_pVax <- (DALYS_no_u_m - DALYS_lost_p_pe) - (llAb_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_pe) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB2_m, NHB3_m, NHB_pVax, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB6_m, NHB7_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_pe(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
cost_prod
winner_pe <- function (pvcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6, NHB7) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
NHB7_m <- rep.col(NHB7, length(eff_red))
pVax_tcost <- sum(pVax_admin * coverage[3]* num_infants * (pvcost + cost_nd)) +  medcost_p_pe
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (cost_prod + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + pvcost)) + medcost_lp_pe
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_pVax <- (DALYS_no_u_m - DALYS_lost_p_pe) - (llAb_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_pe) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB2_m, NHB3_m, NHB_pVax, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB6_m, NHB7_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_pe(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
winner_pe <- function (pvcost, WTP, NHB1, NHB2, NHB3, NHB4, NHB5, NHB6, NHB7) {
NHB1_m <- rep.col(NHB1, length(eff_red))
NHB2_m <- rep.col(NHB2, length(eff_red))
NHB3_m <- rep.col(NHB3, length(eff_red))
NHB4_m <- rep.col(NHB4, length(eff_red))
NHB5_m <- rep.col(NHB5, length(eff_red))
NHB6_m <- rep.col(NHB6, length(eff_red))
NHB7_m <- rep.col(NHB7, length(eff_red))
pVax_tcost <- sum(pVax_admin * coverage[3]* num_infants * (pvcost + cost_nd)) +  medcost_p_pe
llAb_pVax_tcost <- sum(llAb_admin * coverage[1] * num_infants * (cost_prod + cost_nd)) + sum(pVax_admin * coverage[3] * num_infants * (cost_nd + pvcost)) + medcost_lp_pe
DALYS_no_u_m <- rep.col(DALYS_lost_no_u, length(eff_red))
medcost_no_u_m <- rep.col(medcost_no_u, length(eff_red))
NHB_pVax <- (DALYS_no_u_m - DALYS_lost_p_pe) - (pVax_tcost - medcost_no_u_m) / WTP
NHB_llAb_pVax <- (DALYS_no_u_m - DALYS_lost_lp_pe) - (llAb_pVax_tcost - medcost_no_u_m) / WTP
NHB_all <- array(c(NHB1_m, NHB2_m, NHB3_m, NHB_pVax, NHB_llAb_pVax, NHB4_m, NHB5_m, NHB6_m, NHB7_m), dim = c(trials, length(eff_red), 9))
winners <- apply(NHB_all, MARGIN = c(1,2), FUN = which.max)
wintakeall <- apply(winners, MARGIN = 2, FUN = getmode)
wintakeall
}
SA_pe <- matrix(NA, nrow = length(pVax_cost), ncol = length(eff_red))
for (pe in 1:length(pVax_cost)){
pecost <- pVax_cost[pe]
SA_pe[pe,] <- winner_pe(pecost, CET_Mali_GDP, NHB_no_GDP, NHB_l_GDP, NHB_m_GDP, NHB_mp_GDP, NHB_p_older_GDP, NHB_lp_older_GDP, NHB_mp_older_GDP)
}
SA_pe
# two-way sensitivity plot 6
# price pVax product per dose vs efficacy of pVax (10 & 14 wk.)
quartz("price of pVax vs efficacy pVax", 8, 8)
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(eff_red[1]-0.005, eff_red + 0.005) * 100,
y = c(pVax_cost[1] - 0.025, pVax_cost + 0.025),
z = t(SA_pe),
col = c(col_vec, NA),
xlab = "Efficacy of pediatric vaccine antibody",
ylab = "Price of pediatric (USD)")
quartz.save(file = "Figures/pricepVax_effpVax", type = "pdf")
quartz("price of pVax vs efficacy pVax", 8, 8)
par(mar = c(5.1, 4.1, 4.1, 2.1))
par(xaxs="i", yaxs="i")
image(x = c(eff_red[1]-0.005, eff_red + 0.005) * 100,
y = c(pVax_cost[1] - 0.025, pVax_cost + 0.025),
z = t(SA_pe),
col = c(col_vec, NA),
xlab = "Efficacy of pediatric vaccine",
ylab = "Price of pediatric vaccine (USD)")
quartz.save(file = "Figures/pricepVax_effpVax", type = "pdf")
source("~/Dropbox/Rachel Only/RSV-CEA-combos-Mali/master.R", echo=TRUE)
# UMB color palette
UMBred <- rgb(200, 16, 46, maxColorValue = 255)
UMByellow <- rgb(255, 205, 0, maxColorValue = 255)
UMBblue <- rgb(0, 118, 152, maxColorValue = 255)
UMBslate <- rgb(93, 135, 161, maxColorValue = 255)
UMBgray <- rgb(149, 160, 169, maxColorValue = 255)
UMBcharcoal <- rgb(105, 106, 109, maxColorValue = 255)
UMBplum <- rgb(73, 24, 45, maxColorValue = 255)
UMBforest <- rgb(51, 70, 13, maxColorValue = 255)
UMBsea <- rgb(180, 204, 149, maxColorValue = 255)
UMBtan <- rgb(200, 177, 139, maxColorValue = 255)
# make standard vector for colors
UMB1 <- c(UMBred, UMBblue, UMBforest, UMBplum, UMByellow, UMBcharcoal,
UMBsea, UMBtan, UMBslate)
# Cross color palette
Cross_vec <- met.brewer("Cross", n = 9, "discrete")
col_vec <- c(Cross_vec[2], Cross_vec[8], Cross_vec[6], Cross_vec[1],
Cross_vec[5], Cross_vec[9], Cross_vec[7], Cross_vec[4],
Cross_vec[3])
